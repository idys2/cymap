# docker-compose.yml
# 
# Services:
# - timescale db
# - classic postgres db
# - non-persistent test db (TODO)
# - backend
# - frontend (TODO)
# 

services:
  timescale:
    image: timescale/timescaledb:latest-pg17
    restart: always
    environment:
      POSTGRES_USER: ${TIMESCALE_USER}
      POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD}
      POSTGRES_DB: ${TIMESCALE_DB}
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ts-data:/var/lib/postgresql/data:cached

  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    expose:
      - "5433"
    volumes:
      - pg-data:/var/lib/postgresql/data:cached

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python main.py
    tty: true
    environment:
      PYTHONPATH: .
      TIMESCALE_URL: postgresql+asyncpg://${TIMESCALE_USER}:${TIMESCALE_PASSWORD}@timescale:5432/${TIMESCALE_DB}
      POSTGRES_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - "timescale"
      - "postgres"
    ports:
      - "8000:8000"

  # frontend:
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   stdin_open: true
  #   volumes:
  #     - "./frontend:/app:cached"
  #     - "./frontend/node_modules:/app/node_modules:cached"
  #   environment:
  #     - NODE_ENV=development
  #   ports:
  #     - "3000:3000"

volumes:
  ts-data:
  pg-data:
